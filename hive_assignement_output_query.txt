Assignment 1:-

CREATE DATABASE IF NOT EXISTS assignment COMMENT 'Holds hive assignment information' WITH DBPROPERTIES('edited-by'='Rohit')

CREATE EXTERNAL TABLE facebook(
userid INT,
age INT,
dob_day INT,
dob_year INT,
dob_month String,
gender String,
tenure INT,
friend_count INT,
friendships_initiated INT,
likes INT,
likes_received INT,
mobile_likes INT,
mobile_likes_received INT,
www_likes INT,
www_likes_received INT)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED As TextFile
LOCATION '/user/$USER/hivetest'
tblproperties(
"skip.header.line.count"="1"
);


1: select count(*) from pseudo_facebook ;
2: select count(*) from pseudo_facebook where age>23;
3: select count(*) as No of frnds,gender from pseudo_facebook group by gender;
4: select case when age > 25 then 
sum(likes_received,mobile_likes_received,www_likes_received) else '' end as old_peeps_like,
case when age < 25 then sum(likes_received,mobile_likes_received,www_likes_received) else '' end as young_peeps_like from pseudo_facebook;
5: select count(*), dob_month from pseudo_facebook group by dob_month;
6: select case when mobile_likes>0 then 'Use Mobile' when www_likes>0 then 'Use Computer' else '' end as device_used from pseudo_facebook;



Assignment 2:-
1: create table driver_logs as select a.driverId,a.name,sum(b.hours-logged),sum(b.miles-logged) from drivers a 
join a.driverId=b.driverId on timesheet b group by driverId;
2: select name from driver_logs;
3:insert overwrite directory /user/$USER/hivetest select * from driver_logs




Assignment 3:-

DATA setup in HDFS:

1: Copy CSV file to dir AirlinesOntimeAnalysis

cd /home/$USER
mkdir AirlinesOntimeAnalysis
cp /home/$user/airports.csv /home/$USER/AirlinesOntimeAnalysis
cp /home/$user/carrier.csv /home/$USER/AirlinesOntimeAnalysis
cp /home/$user/plane-data.csv /home/$USER/AirlinesOntimeAnalysis

2: unzip bz2 files:

bzip2 -dk 2003.csv.bz2
bzip2 -dk 2004.csv.bz2
bzip2 -dk 2005.csv.bz2

3: Create dir in hdfs:

hdfs dfs -mkdir /user/$USER/airline/flight
hdfs dfs -mkdir /user/$USER/airline/planeinfo
hdfs dfs -mkdir /user/$USER/airline/airport
hdfs dfs -mkdir /user/$USER/airline/carriers

4: copy files to hdfs locations:

hdfs dfs -put /home/$USER/AirlinesOntimeAnalysis/airports.csv /user/$USER/airline/airport/
hdfs dfs -put /home/$USER/AirlinesOntimeAnalysis/carrier.csv /user/$USER/airline/carriers/
hdfs dfs -put /home/$USER/AirlinesOntimeAnalysis/plane-data.csv /user/$USER/airline/planeinfo/
hdfs dfs -put /home/$USER/AirlinesOntimeAnalysis/2003.csv /user/$USER/airline/flight/
hdfs dfs -put /home/$USER/AirlinesOntimeAnalysis/2004.csv /user/$USER/airline/flight/
hdfs dfs -put /home/$USER/AirlinesOntimeAnalysis/2005.csv /user/$USER/airline/flight/

Create Tables :

create table airports_stg(
iata string,
name string,
city string,
state string,
country string,
lat decimal(8,6),
long decimal(8,6))
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED As TextFile
LOCATION '/user/$USER/hivetest'
tblproperties(
"skip.header.line.count"="1"
);


create table carrier_stg(
code string,
description string)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED As TextFile
LOCATION '/user/$USER/hivetest'
tblproperties(
"skip.header.line.count"="1"
);


create table planeinfo_stg(
tailnum string,
type string,
manufacturer string,
issue_date string,
model string,
status string,
aircraft_type string,
engine_type string,
year string)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED As TextFile
LOCATION '/user/$USER/hivetest'
tblproperties(
"skip.header.line.count"="1"
);


create table flight_stg(
year int,
month int,
dayofmonth int,
dayofweek int,
deptime int,
crsdeptime int,
arrtime int, 
crsarrtime int,
uniquecarrier string,
flightnum string,
tailnum string, 
actualelapsedtime int,
crselapsedtime int, 
airtime int, 
arrdelay int,
depdelay int,
origin string,
dest string, 
distance int, 
taxiin string,
taxiout string, 
cancelled string,
cancellationcode string,
diverted string, 
carrierdelay int,
weatherdelay int,
nasdelay int, 
securitydelay int,
lateaircraftdelay int)
ROW FORMAT DELIMITED FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED As TextFile
LOCATION '/user/$USER/hivetest'
tblproperties(
"skip.header.line.count"="1"
); 

Load data in Hive table:

LOAD DATA LOCAL INPATH '/user/$USER/airline/airport/airport.csv' INTO TABLE airport_stg;
LOAD DATA LOCAL INPATH '/user/$USER/airline/carrier/carrier.csv' INTO TABLE carrier_stg;
LOAD DATA LOCAL INPATH '/user/$USER/airline/plane-data/plane-data.csv' INTO TABLE plane-data_stg;
LOAD DATA LOCAL INPATH '/user/$USER/airline/flight/2003.csv' INTO TABLE flight_stg;
LOAD DATA LOCAL INPATH '/user/$USER/airline/flight/2004.csv' INTO TABLE flight_stg;
LOAD DATA LOCAL INPATH '/user/$USER/airline/flight/2005.csv' INTO TABLE flight_stg;

Check if the table have data:

select count(*) from airport_stg;
select count(*) from carrier_stg;
select count(*) from plane-data_stg;
select count(*) from flight_stg;

select avg(arrdelay),avg(depdelay),month,year from flight_stg where year = 2004 group by month,year;

Create parquet table:

CREATE EXTERNAL TABLE IF NOT EXIST flight_pq as
(select * from flight_stg;) 
STORED AS PARQUET 
LOCATION '/user/$USER/output/airline/pq_flights';